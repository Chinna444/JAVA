import java.util.Arrays;
import java.util.Scanner;

public class ArrayOperations {
    private static Scanner scanner = new Scanner(System.in);

    // Method to input array elements
    public static int[] inputArray(int size) {
        int[] array = new int[size];
        System.out.println("Enter " + size + " elements:");
        for (int i = 0; i < size; i++) {
            array[i] = scanner.nextInt();
        }
        return array;
    }

    // Method to display array elements
    public static void displayArray(int[] array) {
        System.out.println("Array Elements: " + Arrays.toString(array));
    }

    // Method to find the maximum element
    public static int findMax(int[] array) {
        int max = array[0];
        for (int num : array) {
            if (num > max) {
                max = num;
            }
        }
        return max;
    }

    // Method to find the minimum element
    public static int findMin(int[] array) {
        int min = array[0];
        for (int num : array) {
            if (num < min) {
                min = num;
            }
        }
        return min;
    }

    // Method to calculate the sum of array elements
    public static int sumArray(int[] array) {
        int sum = 0;
        for (int num : array) {
            sum += num;
        }
        return sum;
    }

    // Method to sort the array using Bubble Sort
    public static void bubbleSort(int[] array) {
        int n = array.length;
        for (int i = 0; i < n - 1; i++) {
            for (int j = 0; j < n - 1 - i; j++) {
                if (array[j] > array[j + 1]) {
                    // Swap array[j] and array[j + 1]
                    int temp = array[j];
                    array[j] = array[j + 1];
                    array[j + 1] = temp;
                }
            }
        }
    }

    // Method to sort the array using Selection Sort
    public static void selectionSort(int[] array) {
        int n = array.length;
        for (int i = 0; i < n - 1; i++) {
            int minIndex = i;
            for (int j = i + 1; j < n; j++) {
                if (array[j] < array[minIndex]) {
                    minIndex = j;
                }
            }
            // Swap array[i] and array[minIndex]
            int temp = array[i];
            array[i] = array[minIndex];
            array[minIndex] = temp;
        }
    }

    // Method to sort the array using Insertion Sort
    public static void insertionSort(int[] array) {
        int n = array.length;
        for (int i = 1; i < n; i++) {
            int key = array[i];
            int j = i - 1;
            while (j >= 0 && array[j] > key) {
                array[j + 1] = array[j];
                j--;
            }
            array[j + 1] = key;
        }
    }

    public static void main(String[] args) {
        System.out.print("Enter the size of the array: ");
        int size = scanner.nextInt();
        int[] array = inputArray(size);

        System.out.println("Choose an operation:");
        System.out.println("1. Display array");
        System.out.println("2. Find maximum");
        System.out.println("3. Find minimum");
        System.out.println("4. Sum of elements");
        System.out.println("5. Bubble sort");
        System.out.println("6. Selection sort");
        System.out.println("7. Insertion sort");

        int choice = scanner.nextInt();
        switch (choice) {
            case 1:
                displayArray(array);
                break;
            case 2:
                System.out.println("Maximum element: " + findMax(array));
                break;
            case 3:
                System.out.println("Minimum element: " + findMin(array));
                break;
            case 4:
                System.out.println("Sum of elements: " + sumArray(array));
                break;
            case 5:
                bubbleSort(array);
                System.out.println("Array after Bubble Sort:");
                displayArray(array);
                break;
            case 6:
                selectionSort(array);
                System.out.println("Array after Selection Sort:");
                displayArray(array);
                break;
            case 7:
                insertionSort(array);
                System.out.println("Array after Insertion Sort:");
                displayArray(array);
                break;
            default:
                System.out.println("Invalid choice!");
        }
    }
}
